#include <stdio.h>

/*int Find(int arr[], int val, int begin, int end) {*/
/*	int mid = (begin+end)/2;*/

/*	if (begin > end) return -1;*/
/*	if (arr[mid]>arr[begin]) {	//left part is normal*/
/*		if (val == arr[mid]) return mid;*/
/*		else if ((val< arr[mid])&&(val >= arr[begin]))*/
/*			return Find(arr, val, begin, mid-1);*/
/*		else*/
/*			return Find(arr, val, mid+1, end);*/
/*	} else {		//right part is normal*/
/*		if (val == arr[mid]) return mid;*/
/*		else if ((val > arr[mid])&&(val <= arr[end]))*/
/*			return Find(arr, val, mid+1, end);*/
/*		else*/
/*			return Find(arr, val, begin, mid-1);*/
/*	}*/
/*}*/

int Find(int arr[], int val, int l, int r) {
	int mid = (l+r)/2;
	int result;

	if (l>r) return -1;

	if (arr[mid] == val)	return mid;
	else if (arr[mid]>arr[l]) {
		if ((val>=arr[l])&&(val<arr[mid])) {
			return Find(arr, val, l, mid-1);
		} else {
			return Find(arr, val, mid+1, r);
		}
	} else if (arr[mid]<arr[r]) {
		if ((val>arr[mid])&&(val<=arr[r])) {
			return Find(arr, val, mid+1, r);
		} else {
			return Find(arr, val, l, mid-1);
		}
	} else if (arr[mid]==arr[l]) {
		if (arr[mid] != arr[r]) {
			return Find(arr, val, mid+1, r);
		} else {
			result = Find(arr, val, l, mid-1);
			if (result < 0) {
				return Find(arr, val, mid+1, r);
			} else {
				return result;
			}
		}
	} else {
		return -1;
	}
}


int main() {
	int arr1[] = {10, 15, 20, 0, 5};
	int arr2[] = {50,5,20,30,40};
	int res;

	res = Find(arr2, 50, 0, 4);

	printf("result %d\n", res);

	return 0;
}
